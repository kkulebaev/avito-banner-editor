{"version":3,"sources":["components/Button.js","components/Label.js","components/Input.js","App.js","reportWebVitals.js","index.js"],"names":["Button","props","className","type","onClick","text","Label","Input","onChange","value","placeholder","maxLength","App","useState","widthValue","setWidthValue","heightValue","setHeightValue","radiusValue","setRadiusValue","colorValue","setColorValue","backgroundValue","setBackgroundValue","textValue","setTextValue","sizeTextValue","setSizeTextValue","colorTextValue","setColorTextValue","htmlBtn","setHtmlBtn","cssBtn","setCssBtn","jsonBtn","setJsonBtn","bannerStyle","width","height","borderRadius","backgroundColor","backgroundImage","textStyle","fontSize","color","styleHtml","display","styleCss","styleJson","action","event","target","console","log","style","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e808f0ee.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <button className='btn btn_create' type={props.type} onClick={props.onClick}>\r\n            {props.text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\n\r\nconst Label = (props) => {\r\n    return <label className='form__label'>{props.text}</label>\r\n}\r\n\r\nexport default Label\r\n","import React from 'react'\r\n\r\nconst Input = (props) => {\r\n    return <input onChange={props.onChange} className='form__input' type={props.type} value={props.value} placeholder={props.placeholder} maxLength={props.maxLength} />\r\n}\r\n\r\nexport default Input\r\n","import React, { useState } from 'react'\nimport Button from './components/Button'\nimport Label from './components/Label'\nimport Input from './components/Input'\n\nfunction App() {\n    let [widthValue, setWidthValue] = useState(500)\n    let [heightValue, setHeightValue] = useState(500)\n    let [radiusValue, setRadiusValue] = useState(20)\n    let [colorValue, setColorValue] = useState('#e1cfe9')\n    let [backgroundValue, setBackgroundValue] = useState('https://purepng.com/public/uploads/large/red-edition-audi-luxury-car-jdc.png')\n    let [textValue, setTextValue] = useState('Продают собственники')\n    let [sizeTextValue, setSizeTextValue] = useState(60)\n    let [colorTextValue, setColorTextValue] = useState('#000')\n    let [htmlBtn, setHtmlBtn] = useState('block')\n    let [cssBtn, setCssBtn] = useState('none')\n    let [jsonBtn, setJsonBtn] = useState('none')\n\n    function changeWidthValue(event) {\n        if (event.target.value <= 500) {\n            setWidthValue(event.target.value)\n        }\n    }\n\n    function changeHeightValue(event) {\n        if (event.target.value <= 500) {\n            setHeightValue(event.target.value)\n        }\n    }\n\n    function changeRadiusValue(event) {\n        if (event.target.value <= 250) {\n            setRadiusValue(event.target.value)\n        }\n    }\n\n    function changeColorValue(event) {\n        setColorValue(event.target.value)\n    }\n\n    function changeBackgroundValue(event) {\n        setBackgroundValue(event.target.value)\n    }\n\n    function changeTextValue(event) {\n        setTextValue(event.target.value)\n        console.log(event)\n    }\n\n    function changeSizeTextValue(event) {\n        if (event.target.value <= 100) {\n            setSizeTextValue(event.target.value)\n        }\n    }\n\n    function changeColorTextValue(event) {\n        setColorTextValue(event.target.value)\n    }\n\n    let bannerStyle = {\n        width: `${widthValue}px`,\n        height: `${heightValue}px`,\n        borderRadius: `${radiusValue}px`,\n        backgroundColor: `${colorValue}`,\n        backgroundImage: `url(${backgroundValue})`,\n    }\n\n    let textStyle = {\n        fontSize: `${sizeTextValue}px`,\n        color: `${colorTextValue}`,\n    }\n\n    let styleHtml = {\n        display: `${htmlBtn}`,\n    }\n\n    let onClickHTML = () => {\n        setHtmlBtn('block')\n        setCssBtn('none')\n        setJsonBtn('none')\n    }\n\n    let styleCss = {\n        display: `${cssBtn}`,\n    }\n\n    let onClickCSS = () => {\n        setHtmlBtn('none')\n        setCssBtn('block')\n        setJsonBtn('none')\n    }\n\n    let styleJson = {\n        display: `${jsonBtn}`,\n    }\n\n    let onClickJSON = () => {\n        setHtmlBtn('none')\n        setCssBtn('none')\n        setJsonBtn('block')\n    }\n\n    return (\n        <div className='App'>\n            <div className='wrapper'>\n                <div className='app'>\n                    <form action='/' className='form'>\n                        <div className='form__group'>\n                            <Label text='Ширина (px)' />\n                            <Input onChange={changeWidthValue} value={widthValue} type='text' placeholder='500' />\n                        </div>\n                        <div className='form__group'>\n                            <Label text='Высота (px)' />\n                            <Input onChange={changeHeightValue} value={heightValue} type='text' />\n                        </div>\n                        <div className='form__group'>\n                            <Label text='Радиус (px)' />\n                            <Input onChange={changeRadiusValue} value={radiusValue} type='text' />\n                        </div>\n                        <div className='form__group'>\n                            <Label text='Цвет заливки (HEX)' />\n                            <Input onChange={changeColorValue} value={colorValue} type='text' />\n                        </div>\n                        <div className='form__group'>\n                            <Label text='Картинка (URL)' />\n                            <Input onChange={changeBackgroundValue} value={backgroundValue} type='text' />\n                        </div>\n                        <div className='form__group'>\n                            <Label text='Текст (35 symbols)' />\n                            <Input onChange={changeTextValue} value={textValue} type='text' maxLength='35' />\n                        </div>\n                        <div className='form__group'>\n                            <Label text='Размер текста (px)' />\n                            <Input onChange={changeSizeTextValue} value={sizeTextValue} type='text' />\n                        </div>\n                        <div className='form__group'>\n                            <Label text='Цвет текста (HEX)' />\n                            <Input onChange={changeColorTextValue} value={colorTextValue} type='text' />\n                        </div>\n\n                        <Button text='Сохранить PNG' type='button' />\n                    </form>\n                    <div className='preview'>\n                        <div className='banner' style={bannerStyle}>\n                            <span className='text' style={textStyle}>\n                                {textValue}\n                            </span>\n                        </div>\n\n                        <div className='code_blocks'>\n                            <div className='code_html' style={styleHtml}>\n                                <pre className='code_block'>\n                                    <code>`className='banner' className='text' {textValue}`</code>\n                                </pre>\n                            </div>\n                            <div className='code_css' style={styleCss}>\n                                <pre className='code_block'>\n                                    <code>\n                                        .banner &#123;\n                                        <br />\n                                        width: {widthValue}px;\n                                        <br />\n                                        height: {heightValue}px;\n                                        <br />\n                                        border-radius: {radiusValue}px;\n                                        <br />\n                                        background-color: {colorValue};\n                                        <br />\n                                        background-image: url({backgroundValue});\n                                        <br />\n                                        background-position: center;\n                                        <br />\n                                        background-repeat: no-repeat;\n                                        <br />\n                                        &#125;\n                                        <br />\n                                        <br />\n                                        .text &#123;\n                                        <br />\n                                        position: absolute;\n                                        <br />\n                                        width: inherit;\n                                        <br />\n                                        overflow: hidden;\n                                        <br />\n                                        font-size: {sizeTextValue}px;\n                                        <br />\n                                        color: {colorTextValue};\n                                        <br />\n                                        text-align: left;\n                                        <br />\n                                        word-wrap: break-word;\n                                        <br />\n                                        line-height: 1;\n                                        <br />\n                                        left: 0;\n                                        <br />\n                                        bottom: 0;\n                                        <br />\n                                        &#125;\n                                    </code>\n                                </pre>\n                            </div>\n                            <div className='code_json' style={styleJson}>\n                                <pre className='code_block'>\n                                    <code>\n                                        &#123;'banner:' &#123;width: {widthValue}, height: {heightValue}, borderRadius: {radiusValue}, backgroundColor: {colorValue},\n                                        backgroundImage: url(\n                                        {backgroundValue}, background-position: center, background-repeat: no-repeat&#125; 'text:' &#123;position: absolute, width: inherit,\n                                        overflow: hidden, font-size: {sizeTextValue}, color: {colorTextValue}, text-align: left, word-wrap: break-word, line-height: 1, left: 0,\n                                        bottom: 0,&#125;\n                                    </code>\n                                </pre>\n                            </div>\n                        </div>\n                        <div className='btn_actions'>\n                            <Button text='HTML' type='button' onClick={onClickHTML} />\n                            <Button text='CSS' type='button' onClick={onClickCSS} />\n                            <Button text='JSON' type='button' onClick={onClickJSON} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}